version: "3.1"
services:
  kniot-scrapper:
    build:
      context: .
      dockerfile: ../Dockerfile.scrape
    environment:
      - XML_STORE_PATH=dumps/
    container_name: kniot-scrapper
    hostname: kniot-scrapper
    restart: unless-stopped
    volumes:
      - dumps:/usr/src/app/dumps

  kniot-parser:
    build:
      context: ./kniot_parser
      dockerfile: ../Dockerfile.parse
    container_name: kniot-parser
    environment:
        - MONGO_URL=mongodb:27017
    hostname: kniot-parser
    restart: unless-stopped
    volumes:
      - dumps:/usr/src/app/dumps

  mongodb:
    image : mongo
    container_name: mongodb
    environment:
        - PUID=1000
        - PGID=1000
    volumes:
        - database:/data/db
    ports:
        - 27017:27017
    restart: unless-stopped
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    hostname: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 22181:2181
  
  kafka:
    image: confluentinc/cp-kafka:latest
    hostname: kafka
    depends_on:
      - zookeeper
    ports:
      - 29092:29092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1


volumes:
  dumps:
    driver: local
    driver_opts:
      o: bind
      type: none
      device: ./dumps
  database:
    driver: local
    driver_opts:
      o: bind
      type: none
      device: ./database